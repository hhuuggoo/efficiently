// Generated by CoffeeScript 1.3.3
(function() {

  Efficiently.parentheses_words = function(input_string) {
    var char, i, matching_parens, start, token, words, _i, _len;
    input_string = input_string.trim();
    start = 0;
    words = [];
    token;

    matching_parens = 0;
    for (i = _i = 0, _len = input_string.length; _i < _len; i = ++_i) {
      char = input_string[i];
      if (char === "(") {
        if (!matching_parens) {
          start = i;
        }
        matching_parens += 1;
      }
      if (matching_parens && char === ")") {
        matching_parens -= 1;
        if (matching_parens === 0) {
          token = input_string.slice(start, i + 1 || 9e9);
        }
        words.push(token);
        start = i + 1;
      }
      if (!matching_parens && char === " ") {
        words.push(input_string.slice(start, i + 1 || 9e9));
        start = i + 1;
      }
    }
    words.push(input_string.slice(start, i + 1 || 9e9));
    words = _.filter(words, function(x) {
      return x !== ' ' && x;
    });
    words = _.map(words, function(x) {
      return x.trim();
    });
    return words;
  };

  
function parentheses_words2(input_string){
    input_string = input_string.trim();
    var start = 0;
    var words = [];
    var token;
    var matching_parens = 0;
    for (i=0; i<input_string.length; i++){
	    if (input_string[i] == "("){
	        if (!matching_parens){
		        start = i;
	        }
	        matching_parens += 1;
	    }
	    if (matching_parens && input_string[i] == ")"){
	        matching_parens -= 1;
	        if (matching_parens == 0){
		        token = input_string.slice(start, i + 1);
		        words.push(token);
		        start = i+1;
	        }
	    }
	    if (!matching_parens && input_string[i] == " "){
	        words.push(input_string.slice(start, i+1));
	        start = i + 1;
	    }
    }

    words.push(input_string.slice(start, i+1));
    words = _.filter(words, function(x){return x != ' ' && x});
    words = _.map(words, function(x){return x.trim()});
    return words;
}

;


  Efficiently.parentheses_words2 = parentheses_words2;

}).call(this);
